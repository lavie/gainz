name: Update Bitcoin Prices

on:
  schedule:
    # Run daily at 00:30 UTC (after global markets close)
    - cron: '30 0 * * *'
  
  # Allow manual triggering for testing
  workflow_dispatch:

permissions:
  contents: write  # Required for committing changes

jobs:
  update-prices:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Use full history to ensure proper git operations
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Configure git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      
      - name: Update Bitcoin price data
        id: update
        run: |
          echo "Checking for missing Bitcoin price data..."
          
          # Store the current state of btc-prices.json
          if [ -f "btc-prices.json" ]; then
            cp btc-prices.json btc-prices.json.before
          fi
          
          # Run the update script
          make update-prices
          
          # Check if the file was modified
          if [ -f "btc-prices.json.before" ]; then
            if cmp -s "btc-prices.json" "btc-prices.json.before"; then
              echo "No changes to btc-prices.json"
              echo "changed=false" >> $GITHUB_OUTPUT
            else
              echo "btc-prices.json was updated"
              echo "changed=true" >> $GITHUB_OUTPUT
            fi
            rm -f btc-prices.json.before
          else
            echo "btc-prices.json was created"
            echo "changed=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Extract price info for commit message
        if: steps.update.outputs.changed == 'true'
        id: price_info
        run: |
          # Extract latest price and date info from the JSON file
          latest_price=$(node -e "
            const data = JSON.parse(require('fs').readFileSync('btc-prices.json', 'utf8'));
            const latestPrice = data.prices[data.prices.length - 1];
            console.log(latestPrice.toLocaleString());
          ")
          
          data_points=$(node -e "
            const data = JSON.parse(require('fs').readFileSync('btc-prices.json', 'utf8'));
            console.log(data.prices.length);
          ")
          
          end_date=$(node -e "
            const data = JSON.parse(require('fs').readFileSync('btc-prices.json', 'utf8'));
            const startDate = new Date(data.start + 'T00:00:00.000Z');
            const endDate = new Date(startDate);
            endDate.setUTCDate(endDate.getUTCDate() + data.prices.length - 1);
            console.log(endDate.toISOString().split('T')[0]);
          ")
          
          echo "latest_price=$latest_price" >> $GITHUB_OUTPUT
          echo "data_points=$data_points" >> $GITHUB_OUTPUT
          echo "end_date=$end_date" >> $GITHUB_OUTPUT
      
      - name: Commit and push changes
        if: steps.update.outputs.changed == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Add only the btc-prices.json file
          git add btc-prices.json
          
          # Create commit message with price info
          commit_message="Update Bitcoin prices - Latest: \$${latest_price} (${end_date})

          ðŸ“Š Updated Bitcoin price data
          ðŸ”¢ Total data points: ${data_points}
          ðŸ“… Latest date: ${end_date}
          ðŸ’° Latest price: \$${latest_price}
          
          ðŸ¤– Generated with [Claude Code](https://claude.ai/code)
          
          Co-Authored-By: Claude <noreply@anthropic.com>"
          
          git commit -m "$commit_message"
          git push
        env:
          latest_price: ${{ steps.price_info.outputs.latest_price }}
          data_points: ${{ steps.price_info.outputs.data_points }}
          end_date: ${{ steps.price_info.outputs.end_date }}
      
      - name: Summary
        run: |
          if [ "${{ steps.update.outputs.changed }}" == "true" ]; then
            echo "âœ… Bitcoin price data updated successfully"
            echo "ðŸ“ˆ Latest price: \$${latest_price}"
            echo "ðŸ“Š Total data points: ${data_points}"
            echo "ðŸ“… Data current through: ${end_date}"
          else
            echo "âœ… Bitcoin price data is already up to date"
          fi
        env:
          latest_price: ${{ steps.price_info.outputs.latest_price }}
          data_points: ${{ steps.price_info.outputs.data_points }}
          end_date: ${{ steps.price_info.outputs.end_date }}